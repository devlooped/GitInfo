# Builds a final release version and pushes to nuget.org 
# whenever a release is published.
# Requires: secrets.NUGET_API_KEY

name: publish
on:
  release:
    types: [released]

env:
  DOTNET_NOLOGO: true
  Configuration: Release

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: 🤘 checkout
        uses: actions/checkout@v2
        with: 
          submodules: recursive
          fetch-depth: 0
          
      - name: 🙏 build
        run: dotnet build -m:1 -p:version=${GITHUB_REF#refs/*/v}

      - name: ⚙ GNU grep
        if: matrix.os == 'macOS-latest'
        run: |
          brew install grep
          echo 'export PATH="/usr/local/opt/grep/libexec/gnubin:$PATH"' >> .bash_profile

      - name: 🧪 test
        shell: bash --noprofile --norc {0}
        env:
          LC_ALL: en_US.utf8
        run: |
          [ -f .bash_profile ] && source .bash_profile
          counter=0
          exitcode=0
          reset="\e[0m"
          warn="\e[0;33m"
          while [ $counter -lt 6 ]
          do
              if [ $filter ]
              then
                  echo -e "${warn}Retry $counter for $filter ${reset}"
              fi
              # run test and forward output also to a file in addition to stdout (tee command)
              dotnet test --no-build -m:1 --blame-hang --blame-hang-timeout 5m --filter=$filter | tee ./output.log
              # capture dotnet test exit status, different from tee
              exitcode=${PIPESTATUS[0]}
              if [ $exitcode == 0 ]
              then
                  exit 0
              fi
              # cat output, get failed test names, join as DisplayName=TEST with |, remove trailing |.
              filter=$(cat ./output.log | grep -o -P '(?<=\sFailed\s)\w*' | awk 'BEGIN { ORS="|" } { print("DisplayName=" $0) }' | grep -o -P '.*(?=\|$)')
              ((counter++))
          done
          exit $exitcode

      - name: 📦 pack
        run: dotnet pack -m:1 -p:version=${GITHUB_REF#refs/*/v}

      - name: 🚀 nuget
        run: dotnet nuget push ./bin/**/*.nupkg -s https://api.nuget.org/v3/index.json -k ${{secrets.NUGET_API_KEY}} --skip-duplicate
